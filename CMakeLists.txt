cmake_minimum_required(VERSION 3.19)
project(ctci6)
include_directories(include)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")

function(add_question_standard CHAPTER QUESTION)
    set(number_pattern "^[0-9][0-9]$")
    if(CHAPTER MATCHES ${number_pattern} AND QUESTION MATCHES ${number_pattern})
        file(GLOB chapters "test/*")
        foreach(chapter ${chapters})
            if(chapter MATCHES "test\/ch${CHAPTER}_[a-z_]+$")
                file(GLOB questions "${chapter}/*")
                foreach(question ${questions})
                    if(question MATCHES "${chapter}\/q${QUESTION}_[a-z_]+$")
                        set(standard_pattern "test\/ch${CHAPTER}_([a-z_]+)\/q${QUESTION}_([a-z_]+)$")
                        if(EXISTS "${question}/main.cpp" AND ${question} MATCHES ${standard_pattern})
                            file(REAL_PATH "src/${CMAKE_MATCH_1}/${CMAKE_MATCH_2}.cpp" source_path)
                            file(REAL_PATH "include/${CMAKE_MATCH_1}/${CMAKE_MATCH_2}.h" header_path)
                            set(executable_name "q${CHAPTER}_${QUESTION}")
                            if(EXISTS ${source_path} AND EXISTS ${header_path})
                                set(executable_set
                                    ${source_path}
                                    ${header_path}
                                    "${question}/main.cpp")
                                add_executable(${executable_name} ${executable_set})
                            endif()
                        endif()
                        break()
                    endif()
                endforeach()
                break()
            endif()
        endforeach()
    endif()
endfunction()

add_question_standard(01 01)
add_question_standard(01 02)
add_question_standard(01 03)
add_question_standard(01 04)