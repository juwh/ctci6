cmake_minimum_required(VERSION 3.8)
project(ctci6)
include_directories(include)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")

set(q01_01
    src/arrays_and_strings/is_unique.cpp
    include/arrays_and_strings/is_unique.h
    test/ch01_arrays_and_strings/q01_is_unique/main.cpp)
add_executable(q01_01 ${q01_01})

#add_executable(q1_02 cpp/ch01_arrays_and_strings/q1_02_check_permutation/check_permutation.cpp)
#add_executable(q1_03 cpp/ch01_arrays_and_strings/q1_03_urlify/urlify.cpp)
#add_executable(q1_04 cpp/ch01_arrays_and_strings/q1_04_palindrome_permutation/palindrome_permutation.cpp)
#add_executable(q1_05 cpp/ch01_arrays_and_strings/q1_05_one_away/one_away.cpp)
#add_executable(q1_06 cpp/ch01_arrays_and_strings/q1_06_string_compression/string_compression.cpp)
#add_executable(q1_07 cpp/ch01_arrays_and_strings/q1_07_rotate_matrix/rotate_matrix.cpp)
#add_executable(q1_08 cpp/ch01_arrays_and_strings/q1_08_zero_matrix/zero_matrix.cpp)
#add_executable(q1_09 cpp/ch01_arrays_and_strings/q1_09_string_rotation/string_rotation.cpp)
#add_executable(q2_01 cpp/ch02_linked_lists/q2_01_remove_dups/remove_dups.cpp)
#add_executable(q2_02 cpp/ch02_linked_lists/q2_02_return_kth_to_last/return_kth_to_last.cpp)
#add_executable(q2_03 cpp/ch02_linked_lists/q2_03_delete_middle_node/delete_middle_node.cpp)
#add_executable(q2_04 cpp/ch02_linked_lists/q2_04_partition/partition.cpp)
#add_executable(q2_05 cpp/ch02_linked_lists/q2_05_sum_lists/sum_lists.cpp)
#add_executable(q2_06 cpp/ch02_linked_lists/q2_06_palindrome/palindrome.cpp)
#add_executable(q2_07 cpp/ch02_linked_lists/q2_07_intersection/intersection.cpp)
#add_executable(q2_08 cpp/ch02_linked_lists/q2_08_loop_detection/loop_detection.cpp)
#add_executable(q3_01 cpp/ch03_stacks_and_queues/q3_01_three_in_one/three_in_one.cpp)
#add_executable(q3_02 cpp/ch03_stacks_and_queues/q3_02_stack_min/stack_min.cpp)
#add_executable(q3_03 cpp/ch03_stacks_and_queues/q3_03_stack_of_plates/stack_of_plates.cpp)
#add_executable(q3_04 cpp/ch03_stacks_and_queues/q3_04_queue_via_stacks/queue_via_stacks.cpp)
#add_executable(q3_05 cpp/ch03_stacks_and_queues/q3_05_sort_stack/sort_stack.cpp)
#add_executable(q3_06 cpp/ch03_stacks_and_queues/q3_06_animal_shelter/animal_shelter.cpp)
#add_executable(q4_01 cpp/ch04_trees_and_graphs/q4_01_route_between_nodes/route_between_nodes.cpp)
#add_executable(q4_02 cpp/ch04_trees_and_graphs/q4_02_minimal_tree/minimal_tree.cpp)
#add_executable(q4_03 cpp/ch04_trees_and_graphs/q4_03_list_of_depths/list_of_depths.cpp)
#add_executable(q4_04 cpp/ch04_trees_and_graphs/q4_04_check_balanced/check_balanced.cpp)
#add_executable(q4_05 cpp/ch04_trees_and_graphs/q4_05_validate_bst/validate_bst.cpp)
#add_executable(q4_06 cpp/ch04_trees_and_graphs/q4_06_successor/successor.cpp)
#add_executable(q4_07 cpp/ch04_trees_and_graphs/q4_07_build_order/build_order.cpp)
#add_executable(q4_08 cpp/ch04_trees_and_graphs/q4_08_first_common_ancestor/first_common_ancestor.cpp)
#add_executable(q4_09 cpp/ch04_trees_and_graphs/q4_09_bst_sequences/bst_sequences.cpp)
#add_executable(q4_10 cpp/ch04_trees_and_graphs/q4_10_check_subtree/check_subtree.cpp)
#add_executable(q4_11 cpp/ch04_trees_and_graphs/q4_11_random_node/random_node.cpp)
#add_executable(q4_12 cpp/ch04_trees_and_graphs/q4_12_paths_with_sum/paths_with_sum.cpp)